// Generated by CoffeeScript 1.4.0
(function() {
  var AppView, LogEntry, LogEntryList, LogEntryRowView,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  LogEntry = (function(_super) {

    __extends(LogEntry, _super);

    function LogEntry() {
      return LogEntry.__super__.constructor.apply(this, arguments);
    }

    return LogEntry;

  })(Backbone.Model);

  LogEntryList = (function(_super) {

    __extends(LogEntryList, _super);

    function LogEntryList() {
      return LogEntryList.__super__.constructor.apply(this, arguments);
    }

    LogEntryList.prototype.model = LogEntry;

    LogEntryList.prototype.localStorage = new Backbone.LocalStorage("exercise-log-db");

    return LogEntryList;

  })(Backbone.Collection);

  LogEntryRowView = (function(_super) {

    __extends(LogEntryRowView, _super);

    function LogEntryRowView() {
      this.render = __bind(this.render, this);
      return LogEntryRowView.__super__.constructor.apply(this, arguments);
    }

    LogEntryRowView.prototype.tagName = "tr";

    LogEntryRowView.prototype.template = _.template($('#row-item').html());

    LogEntryRowView.prototype.render = function() {
      this.$el.html(this.template(this.model.toJSON()));
      return this;
    };

    return LogEntryRowView;

  })(Backbone.View);

  AppView = (function(_super) {

    __extends(AppView, _super);

    function AppView() {
      this.new_entry = __bind(this.new_entry, this);

      this.add_entry = __bind(this.add_entry, this);

      this.initialize = __bind(this.initialize, this);
      return AppView.__super__.constructor.apply(this, arguments);
    }

    AppView.prototype.el = '#exercise-log-app';

    AppView.prototype.events = {
      'click #add_new_entry': 'new_entry'
    };

    AppView.prototype.initialize = function() {
      this.input_time = this.$('#input_time');
      this.entry_list = new LogEntryList;
      this.listenTo(this.entry_list, 'add', this.add_entry);
      return this.entry_list.fetch();
    };

    AppView.prototype.add_entry = function(entry) {
      var view;
      view = new LogEntryRowView({
        model: entry
      });
      return this.$('#log_entries').append(view.render().el);
    };

    AppView.prototype.new_entry = function() {
      this.entry_list.create({
        time: this.input_time.val()
      });
      return this.input_time.val('');
    };

    return AppView;

  })(Backbone.View);

  $(function() {
    return new AppView;
  });

}).call(this);
